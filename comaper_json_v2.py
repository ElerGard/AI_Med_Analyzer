import json
from typing import Dict, List, Union


def compare_jsons(json1: Dict, json2: Dict, parent_key: str = "") -> str:
    """
    Сравнивает два JSON и возвращает различия в формате Markdown

    Args:
        json1: Первый JSON для сравнения
        json2: Второй JSON для сравнения
        parent_key: Родительский ключ (используется для рекурсии)

    Returns:
        Строка с различиями в формате Markdown
    """
    differences = []

    # Получаем все уникальные ключи из обоих JSON
    all_keys = set(json1.keys()).union(set(json2.keys()))

    for key in sorted(all_keys):
        current_key = f"{parent_key}.{key}" if parent_key else key

        # Если ключ есть в обоих JSON
        if key in json1 and key in json2:
            val1, val2 = json1[key], json2[key]

            # Если значения разные
            if val1 != val2:
                # Если оба значения - словари, рекурсивно сравниваем их
                if isinstance(val1, dict) and isinstance(val2, dict):
                    nested_diff = compare_jsons(val1, val2, current_key)
                    if nested_diff.strip():
                        differences.append(nested_diff)
                # Если оба значения - списки, сравниваем их элементы
                elif isinstance(val1, list) and isinstance(val2, list):
                    if len(val1) != len(val2):
                        differences.append(
                            f"**{current_key}**: разное количество элементов ({len(val1)} vs {len(val2)})")
                    else:
                        for i, (item1, item2) in enumerate(zip(val1, val2)):
                            if isinstance(item1, dict) and isinstance(item2, dict):
                                nested_diff = compare_jsons(item1, item2, f"{current_key}[{i}]")
                                if nested_diff.strip():
                                    differences.append(nested_diff)
                            elif item1 != item2:
                                differences.append(f"**{current_key}[{i}]**: '{item1}' vs '{item2}'")
                # Простые значения
                else:
                    differences.append(f"**{current_key}**: '{val1}' vs '{val2}'")

        # Если ключ есть только в первом JSON
        elif key in json1:
            differences.append(f"**{current_key}**: есть только в первом JSON ({json1[key]})")

        # Если ключ есть только во втором JSON
        else:
            differences.append(f"**{current_key}**: есть только во втором JSON ({json2[key]})")

    return "\n".join(differences).replace("[0]", "") if differences else f"**{parent_key}**: различий нет"


# Пример использования
json1 = {
  "Сопутствующие и хронические заболевания": [
    {
      "Вирусные гепатиты": "отрицает",
      "ТВС": "отрицает",
      "Венерические заболевания": "отрицает"
    }
  ],
  "Перенесенные заболевания, травмы, операции": [
    {
      "Операции": {
        "Качественные значения": ["нет"]
      },
      "Травмы": {
        "Качественные значения": ["нет"]
      }
    }
  ],
  "Аллергологический анамнез": [
    {
      "Наличие аллергии": ["аллергия отсутствует"]
    }
  ],
  "Наследственный анамнез": [
    {
      "Наличие заболевания у матери": [
        {
          "Заболевание": {
            "Качественные значения": ["ИМ с летальным исходом"]
          },
          "Возраст": {
            "Числовые значения": [77.0]
          }
        }
      ]
    }
  ],
  "Вредные привычки": [
    {
      "Курение": [
        {
          "Присутствие": {
            "Качественные значения": ["бывший курильщик"]
          },
          "Количество (штук в день)": {
            "Числовые значения": [0.5]
          },
          "Длительность употребления (в годах)": {
            "Качественные значения": []
          }
        }
      ]
    }
  ],
  "Эпидемиологический анамнез": [
    {
      "Выезд за пределы РФ/ПК за последние 6 месяцев": {
        "Качественные значения": ["нет"]
      }
    }
  ]
}

json2 = {
  "Сопутствующие и хронические заболевания": [
    {
      "Вирусные гепатиты": "отрицает",
      "ТВС": "отрицает",
      "Венерические заболевания": "Имеется",
      "ЖКБ": "отрицает"
    }
  ],
  "Перенесенные заболевания, травмы, операции": [
    {
      "Операции": {
        "Качественные значения": ["нет"]
      },
      "Травмы": {
        "Качественные значения": ["нет"]
      }
    }
  ],
  "Аллергологический анамнез": [
    {
      "Наличие аллергии": ["аллергия отсутствует"]
    }
  ],
  "Наследственный анамнез": [
    {
      "Наличие заболевания у матери": [
        {
          "Заболевание": {
            "Качественные значения": ["ИМ с летальным исходом"]
          }
        }
      ]
    }
  ],
  "Вредные привычки": [
    {
      "Курение": [
        {
          "Присутствие": {
            "Качественные значения": ["бывший курильщик"]
          },
          "Количество (штук в день)": {
            "Числовые значения": [0.5]
          },
          "Длительность употребления (в годах)": {
            "Качественные значения": []
          }
        }
      ]
    }
  ],
  "Эпидемиологический анамнез": [
    {
      "Выезд за пределы РФ/ПК за последние 6 месяцев": {
        "Качественные значения": ["нет"]
      }
    }
  ]
}

print(compare_jsons(json1, json2))